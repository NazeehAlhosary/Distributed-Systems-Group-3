{
  "_args": [
    [
      {
        "raw": "refractory@0.0.3",
        "scope": null,
        "escapedName": "refractory",
        "name": "refractory",
        "rawSpec": "0.0.3",
        "spec": "0.0.3",
        "type": "version"
      },
      "D:\\Distributed-Systems-Group-3\\Master_node\\node_modules\\hell"
    ]
  ],
  "_from": "refractory@0.0.3",
  "_id": "refractory@0.0.3",
  "_inCache": true,
  "_location": "/refractory",
  "_npmUser": {
    "name": "vesln",
    "email": "hi@vesln.com"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "refractory@0.0.3",
    "scope": null,
    "escapedName": "refractory",
    "name": "refractory",
    "rawSpec": "0.0.3",
    "spec": "0.0.3",
    "type": "version"
  },
  "_requiredBy": [
    "/hell"
  ],
  "_resolved": "https://registry.npmjs.org/refractory/-/refractory-0.0.3.tgz",
  "_shasum": "8d2f8209d3836bf1f47b1cc2e81367b914fbf0d5",
  "_shrinkwrap": null,
  "_spec": "refractory@0.0.3",
  "_where": "D:\\Distributed-Systems-Group-3\\Master_node\\node_modules\\hell",
  "author": {
    "name": "Veselin Todorov",
    "email": "hi@vesln.com"
  },
  "bugs": {
    "url": "https://github.com/vesln/refractory/issues"
  },
  "dependencies": {},
  "description": "Thin require wrapper that will allow you to load files from conventional paths",
  "devDependencies": {
    "chai": "~1.8.1",
    "coveralls": "~2.3.0",
    "istanbul": "~0.1.44",
    "jshint": "~2.3.0",
    "mocha": "~1.13.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "8d2f8209d3836bf1f47b1cc2e81367b914fbf0d5",
    "tarball": "https://registry.npmjs.org/refractory/-/refractory-0.0.3.tgz"
  },
  "homepage": "https://github.com/vesln/refractory",
  "keywords": [
    "require"
  ],
  "license": "MIT",
  "main": "lib/refractory",
  "maintainers": [
    {
      "name": "vesln",
      "email": "hi@vesln.com"
    }
  ],
  "name": "refractory",
  "optionalDependencies": {},
  "readme": "[![NPM version](https://badge.fury.io/js/refractory.png)](http://badge.fury.io/js/refractory)\n[![Build Status](https://secure.travis-ci.org/vesln/refractory.png)](http://travis-ci.org/vesln/refractory)\n[![Coverage Status](https://coveralls.io/repos/vesln/refractory/badge.png?branch=master)](https://coveralls.io/r/vesln/refractory?branch=master)\n[![Code Climate](https://codeclimate.com/github/vesln/refractory.png)](https://codeclimate.com/github/vesln/refractory)\n\n# Refractory\n\n## Synopsis\n\nRefactory is a thin `require` wrapper that will allow you to load files from\nconventional paths.\n\n## Description\n\nWhen implementing CLI apps it's often a requirement to support \"formatters\",\n\"reporters\" and various \".rc\" files. In my case I needed to add support for formatters\nto both [curiosity](https://github.com/vesln/curiosity) and\n[hell](https://github.com/vesln/hell). However, allowing users to implement\ncustom formatters is a nifty feature. This is how refractory was born.\n\n### Usage\n\n```js\nvar refractory = require('refractory');\nvar load = refractory(module, './hell/formatters', '{{HOME}}/.hell/formatters');\nvar Formatter = load('hell-awesome-formatter', 'awesome-formatter');\n```\n\nRefractory will try to load 'hell-awesome-formatter' then 'awesome-formatter' from the\nfollowing locations.\n\n- ./hell/formatters/\n- ~/.hell/formatters/\n- node_modules/my-awesome-formatter\n\nYou may also add addition template slugs by setting them on refractory.\n\n```js\n// set\nrefractory.PKG_HOME = require('path').join(refractory.HOME, '.hell');\n\n// use\nvar load = refractory(module, '{{PKG_HOME}}/formatters');\n```\n\n#### Errors\n\nIn case the requested file can't be found refractory will throw an error.\nThe error has the following extra properties:\n\n- code - Always equals to \"MODULE_NOT_FOUND\"\n- paths - An array of all of the variations that refractory tried to load. Useful\n  for debugging issues\n\n## Installation\n\n```bash\n$ npm install refractory\n```\n\n## Tests\n\n### Running the tests\n\n```bash\n$ npm test\n```\n\n### Test coverage\n\n```bash\n$ npm run-script coverage\n```\n\n## Credits\n\nSpecial thanks to:\n\n  - [Jake Luer](https://github.com/logicalparadox)\n\n## Support the author\n\nDo you like this project? Star the repository, spread the word - it really helps. You may want to follow\nme on [Twitter](https://twitter.com/vesln) and\n[GitHub](https://github.com/vesln). Thanks!\n\n## License\n\n**MIT License**\n\nCopyright (C) 2013 Veselin Todorov (hi@vesln.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial\nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO\nTHE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/vesln/refractory.git"
  },
  "scripts": {
    "coverage": "istanbul cover ./node_modules/.bin/_mocha test/*.test.js",
    "coveralls": "istanbul cover ./node_modules/.bin/_mocha test/*.test.js --report lcovonly && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "pretest": "./node_modules/.bin/jshint .",
    "test": "./node_modules/.bin/mocha test/*.test.js"
  },
  "version": "0.0.3"
}
